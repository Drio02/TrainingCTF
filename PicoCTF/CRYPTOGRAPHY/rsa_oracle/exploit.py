#2 ^ e mode n * m ^ e mod n -> (2n) ^ e mod n

from pwn import *

# Obtener la respuesta de los primeros mensajes y mandar la encriptacion
PORT = 63846
SERVER = "titan.picoctf.net"

conecction = remote(SERVER, PORT)

response = conecction.recvuntil('decrypt.')
print(response.decode())
payload = b'E' + b'\n'

conecction.send(payload)

response = conecction.recvuntil('keysize):')
print(response.decode())

# Queremos encriptar el 2
payload = b'\x02' + b'\n'
conecction.send(payload)

response = conecction.recvuntil('ciphertext (m ^ e mod n)')
response = conecction.recvline()

# Ahora sabemos el 2 ^ e, queremos multiplicarlo por el m ^ e (esta en el archivo password.enc)
num = int(response.decode()) * 4228273471152570993857755209040611143227336245190875847649142807501848960847851973658239485570030833999780269457000091948785164374915942471027917017922546

# Ahora escogemos desenciptar
response = conecction.recvuntil('decrypt.')
print(response.decode())
payload = b'D' + b'\n'
conecction.send(payload)

# Vamos a desencriptar 2^e-m^e que nos da 2*m
response = conecction.recvuntil('decrypt:')
print(response.decode())
conecction.send(str(num)+ '\n')

response = conecction.recvuntil('hex (c ^ d mod n):')
print(response.decode())
response = conecction.recvline()

#Traemos la respuesta y la dividimos por 2
num = int(response, 16) // 2
print(hex(num))

#La pasamos a ASCII
hex_string = hex(num)[2:] #get rid of 0x
byte_array = bytes.fromhex(hex_string)
print(byte_array.decode('ascii'))